name: Publish

on: [workflow_dispatch]

jobs:
  # bump_version:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout git repo
  #       uses: actions/checkout@v1

  #     - name: 'Automated version bump'
  #       uses: 'phips28/gh-action-bump-version@master'
  #       env:
  #         PACKAGEJSON_DIR: 'release/app'
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         skip-tag: 'true'

  publish_windows:
    runs-on: windows-latest

    # needs: bump_version

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Install Node and NPM
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install dependencies
        run: |
          npm install

      - name: Publish release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm run postinstall
          npm run build
          npm exec electron-builder -- --publish always --win

  publish_linux:
    runs-on: ubuntu-latest

    # needs: bump_version

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v3

      - name: Install Node and NPM
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Install dependencies
        run: |
          npm install

      - name: Publish release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm run postinstall
          npm run build
          npm exec electron-builder -- --publish always --linux
        # npm exec electron-builder -- --publish always --linux deb AppImage
        # npm exec electron-builder -- --publish always --linux rpm -c.productName=InfiniteRealityEngineLauncher

  # publish_mac:
  #   runs-on: macos-latest

  #   needs: bump_version

  #   steps:
  #     - name: Checkout git repo
  #       uses: actions/checkout@v3

  #     - name: Install Node and NPM
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 16.x

  #     - name: Install dependencies
  #       run: |
  #         npm install

  #     - name: Publish releases
  #       env:
  #         # These values are used for auto updates signing
  #         # APPLE_ID: ${{ secrets.APPLE_ID }}
  #         # APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
  #         # CSC_LINK: ${{ secrets.CSC_LINK }}
  #         # CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
  #         # This is used for uploading release assets to github
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       run: |
  #         npm run postinstall
  #         npm run build
  #         npm exec electron-builder -- --publish always --mac
